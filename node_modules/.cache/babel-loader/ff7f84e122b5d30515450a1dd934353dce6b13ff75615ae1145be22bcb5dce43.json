{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\arfai\\\\OneDrive\\\\Desktop\\\\Sanketika\\\\redux practice\\\\redux\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// import { useEffect } from \"react\";\n// import { useSelector } from \"react-redux\";\n// import Cart from \"./components/Cart/Cart\";\n// import Layout from \"./components/Layout/Layout\";\n// import Products from \"./components/Shop/Products\";\n\n// function App() {\n//   const showCart = useSelector((state) => state.ui.cartIsVisible);\n//   const cart = useSelector((state) => state.cart);\n\n//   useEffect(() => {\n//     fetch(\n//       \"https://redux-practice-496e0-default-rtdb.firebaseio.com/cart.json\",\n//       {\n//         method: \"PUT\",\n//         body: JSON.stringify(cart),\n//       }\n//     );\n//   }, [cart]);\n\n//   return (\n//     <Layout>\n//       {showCart && <Cart />}\n//       <Products />\n//     </Layout>\n//   );\n// }\n\n// export default App;\n\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Cart from \"./components/Cart/Cart\";\nimport Layout from \"./components/Layout/Layout\";\nimport Products from \"./components/Shop/Products\";\nimport { cartActions } from \"./store/cart-slice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const dispatch = useDispatch();\n  const showCart = useSelector(state => state.ui.cartIsVisible);\n  const cart = useSelector(state => state.cart);\n\n  // Fetch the initial cart state from the backend\n  useEffect(() => {\n    const fetchCartData = async () => {\n      const response = await fetch(\"https://react-http-6b4a6.firebaseio.com/cart.json\");\n      if (!response.ok) {\n        throw new Error(\"Fetching cart data failed!\");\n      }\n      const data = await response.json();\n      dispatch(cartActions.replaceCart(data));\n    };\n    fetchCartData().catch(error => {\n      console.error(\"Failed to fetch cart data: \", error);\n    });\n  }, [dispatch]);\n\n  // Save cart state to the backend whenever it changes\n  useEffect(() => {\n    fetch(\"https://react-http-6b4a6.firebaseio.com/cart.json\", {\n      method: \"PUT\",\n      body: JSON.stringify(cart)\n    }).catch(error => {\n      console.error(\"Failed to save cart data: \", error);\n    });\n  }, [cart]);\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: [showCart && /*#__PURE__*/_jsxDEV(Cart, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 20\n    }, this), /*#__PURE__*/_jsxDEV(Products, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"M3ijIXhKrQI7xYdjGtu7bd84jus=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useDispatch","useSelector","Cart","Layout","Products","cartActions","jsxDEV","_jsxDEV","App","_s","dispatch","showCart","state","ui","cartIsVisible","cart","fetchCartData","response","fetch","ok","Error","data","json","replaceCart","catch","error","console","method","body","JSON","stringify","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/arfai/OneDrive/Desktop/Sanketika/redux practice/redux/src/App.js"],"sourcesContent":["// import { useEffect } from \"react\";\n// import { useSelector } from \"react-redux\";\n// import Cart from \"./components/Cart/Cart\";\n// import Layout from \"./components/Layout/Layout\";\n// import Products from \"./components/Shop/Products\";\n\n// function App() {\n//   const showCart = useSelector((state) => state.ui.cartIsVisible);\n//   const cart = useSelector((state) => state.cart);\n\n//   useEffect(() => {\n//     fetch(\n//       \"https://redux-practice-496e0-default-rtdb.firebaseio.com/cart.json\",\n//       {\n//         method: \"PUT\",\n//         body: JSON.stringify(cart),\n//       }\n//     );\n//   }, [cart]);\n\n//   return (\n//     <Layout>\n//       {showCart && <Cart />}\n//       <Products />\n//     </Layout>\n//   );\n// }\n\n// export default App;\n\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Cart from \"./components/Cart/Cart\";\nimport Layout from \"./components/Layout/Layout\";\nimport Products from \"./components/Shop/Products\";\nimport { cartActions } from \"./store/cart-slice\";\n\nfunction App() {\n  const dispatch = useDispatch();\n  const showCart = useSelector((state) => state.ui.cartIsVisible);\n  const cart = useSelector((state) => state.cart);\n\n  // Fetch the initial cart state from the backend\n  useEffect(() => {\n    const fetchCartData = async () => {\n      const response = await fetch(\n        \"https://react-http-6b4a6.firebaseio.com/cart.json\"\n      );\n      if (!response.ok) {\n        throw new Error(\"Fetching cart data failed!\");\n      }\n      const data = await response.json();\n      dispatch(cartActions.replaceCart(data));\n    };\n\n    fetchCartData().catch((error) => {\n      console.error(\"Failed to fetch cart data: \", error);\n    });\n  }, [dispatch]);\n\n  // Save cart state to the backend whenever it changes\n  useEffect(() => {\n    fetch(\"https://react-http-6b4a6.firebaseio.com/cart.json\", {\n      method: \"PUT\",\n      body: JSON.stringify(cart),\n    }).catch((error) => {\n      console.error(\"Failed to save cart data: \", error);\n    });\n  }, [cart]);\n\n  return (\n    <Layout>\n      {showCart && <Cart />}\n      <Products />\n    </Layout>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,SAASA,SAAS,QAAQ,OAAO;AACjC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,OAAOC,IAAI,MAAM,wBAAwB;AACzC,OAAOC,MAAM,MAAM,4BAA4B;AAC/C,OAAOC,QAAQ,MAAM,4BAA4B;AACjD,SAASC,WAAW,QAAQ,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAMC,QAAQ,GAAGV,WAAW,CAAC,CAAC;EAC9B,MAAMW,QAAQ,GAAGV,WAAW,CAAEW,KAAK,IAAKA,KAAK,CAACC,EAAE,CAACC,aAAa,CAAC;EAC/D,MAAMC,IAAI,GAAGd,WAAW,CAAEW,KAAK,IAAKA,KAAK,CAACG,IAAI,CAAC;;EAE/C;EACAhB,SAAS,CAAC,MAAM;IACd,MAAMiB,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,mDACF,CAAC;MACD,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,4BAA4B,CAAC;MAC/C;MACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MAClCZ,QAAQ,CAACL,WAAW,CAACkB,WAAW,CAACF,IAAI,CAAC,CAAC;IACzC,CAAC;IAEDL,aAAa,CAAC,CAAC,CAACQ,KAAK,CAAEC,KAAK,IAAK;MAC/BC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;IACrD,CAAC,CAAC;EACJ,CAAC,EAAE,CAACf,QAAQ,CAAC,CAAC;;EAEd;EACAX,SAAS,CAAC,MAAM;IACdmB,KAAK,CAAC,mDAAmD,EAAE;MACzDS,MAAM,EAAE,KAAK;MACbC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACf,IAAI;IAC3B,CAAC,CAAC,CAACS,KAAK,CAAEC,KAAK,IAAK;MAClBC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IACpD,CAAC,CAAC;EACJ,CAAC,EAAE,CAACV,IAAI,CAAC,CAAC;EAEV,oBACER,OAAA,CAACJ,MAAM;IAAA4B,QAAA,GACJpB,QAAQ,iBAAIJ,OAAA,CAACL,IAAI;MAAA8B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACrB5B,OAAA,CAACH,QAAQ;MAAA4B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEb;AAAC1B,EAAA,CAvCQD,GAAG;EAAA,QACOR,WAAW,EACXC,WAAW,EACfA,WAAW;AAAA;AAAAmC,EAAA,GAHjB5B,GAAG;AAyCZ,eAAeA,GAAG;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}